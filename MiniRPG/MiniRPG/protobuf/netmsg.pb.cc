// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: netmsg.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "netmsg.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace MessageCode {

namespace {

const ::google::protobuf::Descriptor* ProtoLoginReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ProtoLoginReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* ProtoLoginRes_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ProtoLoginRes_reflection_ = NULL;
const ::google::protobuf::Descriptor* ProtoEnterMapReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ProtoEnterMapReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* ProtoEnterMapRes_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ProtoEnterMapRes_reflection_ = NULL;
const ::google::protobuf::Descriptor* ProtoNPCStatus_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ProtoNPCStatus_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* ProtoNPCStatus_NPCDirection_descriptor_ = NULL;
const ::google::protobuf::Descriptor* ProtoPlayerMoveReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ProtoPlayerMoveReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* ProtoPlayerMoveRes_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ProtoPlayerMoveRes_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_netmsg_2eproto() {
  protobuf_AddDesc_netmsg_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "netmsg.proto");
  GOOGLE_CHECK(file != NULL);
  ProtoLoginReq_descriptor_ = file->message_type(0);
  static const int ProtoLoginReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoLoginReq, authid_),
  };
  ProtoLoginReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ProtoLoginReq_descriptor_,
      ProtoLoginReq::default_instance_,
      ProtoLoginReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoLoginReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoLoginReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ProtoLoginReq));
  ProtoLoginRes_descriptor_ = file->message_type(1);
  static const int ProtoLoginRes_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoLoginRes, mapid_),
  };
  ProtoLoginRes_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ProtoLoginRes_descriptor_,
      ProtoLoginRes::default_instance_,
      ProtoLoginRes_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoLoginRes, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoLoginRes, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ProtoLoginRes));
  ProtoEnterMapReq_descriptor_ = file->message_type(2);
  static const int ProtoEnterMapReq_offsets_[1] = {
  };
  ProtoEnterMapReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ProtoEnterMapReq_descriptor_,
      ProtoEnterMapReq::default_instance_,
      ProtoEnterMapReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoEnterMapReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoEnterMapReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ProtoEnterMapReq));
  ProtoEnterMapRes_descriptor_ = file->message_type(3);
  static const int ProtoEnterMapRes_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoEnterMapRes, positinx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoEnterMapRes, positiny_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoEnterMapRes, npclist_),
  };
  ProtoEnterMapRes_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ProtoEnterMapRes_descriptor_,
      ProtoEnterMapRes::default_instance_,
      ProtoEnterMapRes_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoEnterMapRes, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoEnterMapRes, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ProtoEnterMapRes));
  ProtoNPCStatus_descriptor_ = file->message_type(4);
  static const int ProtoNPCStatus_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoNPCStatus, npcid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoNPCStatus, positinx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoNPCStatus, positiny_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoNPCStatus, direction_),
  };
  ProtoNPCStatus_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ProtoNPCStatus_descriptor_,
      ProtoNPCStatus::default_instance_,
      ProtoNPCStatus_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoNPCStatus, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoNPCStatus, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ProtoNPCStatus));
  ProtoNPCStatus_NPCDirection_descriptor_ = ProtoNPCStatus_descriptor_->enum_type(0);
  ProtoPlayerMoveReq_descriptor_ = file->message_type(5);
  static const int ProtoPlayerMoveReq_offsets_[1] = {
  };
  ProtoPlayerMoveReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ProtoPlayerMoveReq_descriptor_,
      ProtoPlayerMoveReq::default_instance_,
      ProtoPlayerMoveReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoPlayerMoveReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoPlayerMoveReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ProtoPlayerMoveReq));
  ProtoPlayerMoveRes_descriptor_ = file->message_type(6);
  static const int ProtoPlayerMoveRes_offsets_[1] = {
  };
  ProtoPlayerMoveRes_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ProtoPlayerMoveRes_descriptor_,
      ProtoPlayerMoveRes::default_instance_,
      ProtoPlayerMoveRes_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoPlayerMoveRes, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoPlayerMoveRes, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ProtoPlayerMoveRes));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_netmsg_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ProtoLoginReq_descriptor_, &ProtoLoginReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ProtoLoginRes_descriptor_, &ProtoLoginRes::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ProtoEnterMapReq_descriptor_, &ProtoEnterMapReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ProtoEnterMapRes_descriptor_, &ProtoEnterMapRes::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ProtoNPCStatus_descriptor_, &ProtoNPCStatus::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ProtoPlayerMoveReq_descriptor_, &ProtoPlayerMoveReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ProtoPlayerMoveRes_descriptor_, &ProtoPlayerMoveRes::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_netmsg_2eproto() {
  delete ProtoLoginReq::default_instance_;
  delete ProtoLoginReq_reflection_;
  delete ProtoLoginRes::default_instance_;
  delete ProtoLoginRes_reflection_;
  delete ProtoEnterMapReq::default_instance_;
  delete ProtoEnterMapReq_reflection_;
  delete ProtoEnterMapRes::default_instance_;
  delete ProtoEnterMapRes_reflection_;
  delete ProtoNPCStatus::default_instance_;
  delete ProtoNPCStatus_reflection_;
  delete ProtoPlayerMoveReq::default_instance_;
  delete ProtoPlayerMoveReq_reflection_;
  delete ProtoPlayerMoveRes::default_instance_;
  delete ProtoPlayerMoveRes_reflection_;
}

void protobuf_AddDesc_netmsg_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\014netmsg.proto\022\013MessageCode\"\037\n\rProtoLogi"
    "nReq\022\016\n\006authID\030\001 \002(\005\"\036\n\rProtoLoginRes\022\r\n"
    "\005mapID\030\001 \002(\005\"\022\n\020ProtoEnterMapReq\"d\n\020Prot"
    "oEnterMapRes\022\020\n\010positinX\030\001 \002(\005\022\020\n\010positi"
    "nY\030\002 \002(\005\022,\n\007npcList\030\003 \003(\0132\033.MessageCode."
    "ProtoNPCStatus\"\277\001\n\016ProtoNPCStatus\022\r\n\005npc"
    "ID\030\001 \002(\005\022\020\n\010positinX\030\002 \002(\005\022\020\n\010positinY\030\003"
    " \002(\005\022;\n\tdirection\030\004 \002(\0162(.MessageCode.Pr"
    "otoNPCStatus.NPCDirection\"=\n\014NPCDirectio"
    "n\022\n\n\006P_LEFT\020\001\022\013\n\007P_RIGHT\020\002\022\n\n\006P_DOWN\020\003\022\010"
    "\n\004P_UP\020\004\"\024\n\022ProtoPlayerMoveReq\"\024\n\022ProtoP"
    "layerMoveRes", 452);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "netmsg.proto", &protobuf_RegisterTypes);
  ProtoLoginReq::default_instance_ = new ProtoLoginReq();
  ProtoLoginRes::default_instance_ = new ProtoLoginRes();
  ProtoEnterMapReq::default_instance_ = new ProtoEnterMapReq();
  ProtoEnterMapRes::default_instance_ = new ProtoEnterMapRes();
  ProtoNPCStatus::default_instance_ = new ProtoNPCStatus();
  ProtoPlayerMoveReq::default_instance_ = new ProtoPlayerMoveReq();
  ProtoPlayerMoveRes::default_instance_ = new ProtoPlayerMoveRes();
  ProtoLoginReq::default_instance_->InitAsDefaultInstance();
  ProtoLoginRes::default_instance_->InitAsDefaultInstance();
  ProtoEnterMapReq::default_instance_->InitAsDefaultInstance();
  ProtoEnterMapRes::default_instance_->InitAsDefaultInstance();
  ProtoNPCStatus::default_instance_->InitAsDefaultInstance();
  ProtoPlayerMoveReq::default_instance_->InitAsDefaultInstance();
  ProtoPlayerMoveRes::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_netmsg_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_netmsg_2eproto {
  StaticDescriptorInitializer_netmsg_2eproto() {
    protobuf_AddDesc_netmsg_2eproto();
  }
} static_descriptor_initializer_netmsg_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int ProtoLoginReq::kAuthIDFieldNumber;
#endif  // !_MSC_VER

ProtoLoginReq::ProtoLoginReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ProtoLoginReq::InitAsDefaultInstance() {
}

ProtoLoginReq::ProtoLoginReq(const ProtoLoginReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ProtoLoginReq::SharedCtor() {
  _cached_size_ = 0;
  authid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ProtoLoginReq::~ProtoLoginReq() {
  SharedDtor();
}

void ProtoLoginReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ProtoLoginReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProtoLoginReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ProtoLoginReq_descriptor_;
}

const ProtoLoginReq& ProtoLoginReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_netmsg_2eproto();
  return *default_instance_;
}

ProtoLoginReq* ProtoLoginReq::default_instance_ = NULL;

ProtoLoginReq* ProtoLoginReq::New() const {
  return new ProtoLoginReq;
}

void ProtoLoginReq::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    authid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ProtoLoginReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 authID = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &authid_)));
          set_has_authid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ProtoLoginReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 authID = 1;
  if (has_authid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->authid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ProtoLoginReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 authID = 1;
  if (has_authid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->authid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ProtoLoginReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 authID = 1;
    if (has_authid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->authid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProtoLoginReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ProtoLoginReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ProtoLoginReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ProtoLoginReq::MergeFrom(const ProtoLoginReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_authid()) {
      set_authid(from.authid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ProtoLoginReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoLoginReq::CopyFrom(const ProtoLoginReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoLoginReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void ProtoLoginReq::Swap(ProtoLoginReq* other) {
  if (other != this) {
    std::swap(authid_, other->authid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ProtoLoginReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ProtoLoginReq_descriptor_;
  metadata.reflection = ProtoLoginReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ProtoLoginRes::kMapIDFieldNumber;
#endif  // !_MSC_VER

ProtoLoginRes::ProtoLoginRes()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ProtoLoginRes::InitAsDefaultInstance() {
}

ProtoLoginRes::ProtoLoginRes(const ProtoLoginRes& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ProtoLoginRes::SharedCtor() {
  _cached_size_ = 0;
  mapid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ProtoLoginRes::~ProtoLoginRes() {
  SharedDtor();
}

void ProtoLoginRes::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ProtoLoginRes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProtoLoginRes::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ProtoLoginRes_descriptor_;
}

const ProtoLoginRes& ProtoLoginRes::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_netmsg_2eproto();
  return *default_instance_;
}

ProtoLoginRes* ProtoLoginRes::default_instance_ = NULL;

ProtoLoginRes* ProtoLoginRes::New() const {
  return new ProtoLoginRes;
}

void ProtoLoginRes::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    mapid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ProtoLoginRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 mapID = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mapid_)));
          set_has_mapid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ProtoLoginRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 mapID = 1;
  if (has_mapid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->mapid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ProtoLoginRes::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 mapID = 1;
  if (has_mapid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->mapid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ProtoLoginRes::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 mapID = 1;
    if (has_mapid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->mapid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProtoLoginRes::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ProtoLoginRes* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ProtoLoginRes*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ProtoLoginRes::MergeFrom(const ProtoLoginRes& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_mapid()) {
      set_mapid(from.mapid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ProtoLoginRes::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoLoginRes::CopyFrom(const ProtoLoginRes& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoLoginRes::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void ProtoLoginRes::Swap(ProtoLoginRes* other) {
  if (other != this) {
    std::swap(mapid_, other->mapid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ProtoLoginRes::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ProtoLoginRes_descriptor_;
  metadata.reflection = ProtoLoginRes_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

ProtoEnterMapReq::ProtoEnterMapReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ProtoEnterMapReq::InitAsDefaultInstance() {
}

ProtoEnterMapReq::ProtoEnterMapReq(const ProtoEnterMapReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ProtoEnterMapReq::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ProtoEnterMapReq::~ProtoEnterMapReq() {
  SharedDtor();
}

void ProtoEnterMapReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ProtoEnterMapReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProtoEnterMapReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ProtoEnterMapReq_descriptor_;
}

const ProtoEnterMapReq& ProtoEnterMapReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_netmsg_2eproto();
  return *default_instance_;
}

ProtoEnterMapReq* ProtoEnterMapReq::default_instance_ = NULL;

ProtoEnterMapReq* ProtoEnterMapReq::New() const {
  return new ProtoEnterMapReq;
}

void ProtoEnterMapReq::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ProtoEnterMapReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void ProtoEnterMapReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ProtoEnterMapReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ProtoEnterMapReq::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProtoEnterMapReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ProtoEnterMapReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ProtoEnterMapReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ProtoEnterMapReq::MergeFrom(const ProtoEnterMapReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ProtoEnterMapReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoEnterMapReq::CopyFrom(const ProtoEnterMapReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoEnterMapReq::IsInitialized() const {

  return true;
}

void ProtoEnterMapReq::Swap(ProtoEnterMapReq* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ProtoEnterMapReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ProtoEnterMapReq_descriptor_;
  metadata.reflection = ProtoEnterMapReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ProtoEnterMapRes::kPositinXFieldNumber;
const int ProtoEnterMapRes::kPositinYFieldNumber;
const int ProtoEnterMapRes::kNpcListFieldNumber;
#endif  // !_MSC_VER

ProtoEnterMapRes::ProtoEnterMapRes()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ProtoEnterMapRes::InitAsDefaultInstance() {
}

ProtoEnterMapRes::ProtoEnterMapRes(const ProtoEnterMapRes& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ProtoEnterMapRes::SharedCtor() {
  _cached_size_ = 0;
  positinx_ = 0;
  positiny_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ProtoEnterMapRes::~ProtoEnterMapRes() {
  SharedDtor();
}

void ProtoEnterMapRes::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ProtoEnterMapRes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProtoEnterMapRes::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ProtoEnterMapRes_descriptor_;
}

const ProtoEnterMapRes& ProtoEnterMapRes::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_netmsg_2eproto();
  return *default_instance_;
}

ProtoEnterMapRes* ProtoEnterMapRes::default_instance_ = NULL;

ProtoEnterMapRes* ProtoEnterMapRes::New() const {
  return new ProtoEnterMapRes;
}

void ProtoEnterMapRes::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    positinx_ = 0;
    positiny_ = 0;
  }
  npclist_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ProtoEnterMapRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 positinX = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &positinx_)));
          set_has_positinx();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_positinY;
        break;
      }

      // required int32 positinY = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_positinY:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &positiny_)));
          set_has_positiny();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_npcList;
        break;
      }

      // repeated .MessageCode.ProtoNPCStatus npcList = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_npcList:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_npclist()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_npcList;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ProtoEnterMapRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 positinX = 1;
  if (has_positinx()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->positinx(), output);
  }

  // required int32 positinY = 2;
  if (has_positiny()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->positiny(), output);
  }

  // repeated .MessageCode.ProtoNPCStatus npcList = 3;
  for (int i = 0; i < this->npclist_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->npclist(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ProtoEnterMapRes::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 positinX = 1;
  if (has_positinx()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->positinx(), target);
  }

  // required int32 positinY = 2;
  if (has_positiny()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->positiny(), target);
  }

  // repeated .MessageCode.ProtoNPCStatus npcList = 3;
  for (int i = 0; i < this->npclist_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->npclist(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ProtoEnterMapRes::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 positinX = 1;
    if (has_positinx()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->positinx());
    }

    // required int32 positinY = 2;
    if (has_positiny()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->positiny());
    }

  }
  // repeated .MessageCode.ProtoNPCStatus npcList = 3;
  total_size += 1 * this->npclist_size();
  for (int i = 0; i < this->npclist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->npclist(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProtoEnterMapRes::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ProtoEnterMapRes* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ProtoEnterMapRes*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ProtoEnterMapRes::MergeFrom(const ProtoEnterMapRes& from) {
  GOOGLE_CHECK_NE(&from, this);
  npclist_.MergeFrom(from.npclist_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_positinx()) {
      set_positinx(from.positinx());
    }
    if (from.has_positiny()) {
      set_positiny(from.positiny());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ProtoEnterMapRes::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoEnterMapRes::CopyFrom(const ProtoEnterMapRes& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoEnterMapRes::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  for (int i = 0; i < npclist_size(); i++) {
    if (!this->npclist(i).IsInitialized()) return false;
  }
  return true;
}

void ProtoEnterMapRes::Swap(ProtoEnterMapRes* other) {
  if (other != this) {
    std::swap(positinx_, other->positinx_);
    std::swap(positiny_, other->positiny_);
    npclist_.Swap(&other->npclist_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ProtoEnterMapRes::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ProtoEnterMapRes_descriptor_;
  metadata.reflection = ProtoEnterMapRes_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* ProtoNPCStatus_NPCDirection_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ProtoNPCStatus_NPCDirection_descriptor_;
}
bool ProtoNPCStatus_NPCDirection_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const ProtoNPCStatus_NPCDirection ProtoNPCStatus::P_LEFT;
const ProtoNPCStatus_NPCDirection ProtoNPCStatus::P_RIGHT;
const ProtoNPCStatus_NPCDirection ProtoNPCStatus::P_DOWN;
const ProtoNPCStatus_NPCDirection ProtoNPCStatus::P_UP;
const ProtoNPCStatus_NPCDirection ProtoNPCStatus::NPCDirection_MIN;
const ProtoNPCStatus_NPCDirection ProtoNPCStatus::NPCDirection_MAX;
const int ProtoNPCStatus::NPCDirection_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int ProtoNPCStatus::kNpcIDFieldNumber;
const int ProtoNPCStatus::kPositinXFieldNumber;
const int ProtoNPCStatus::kPositinYFieldNumber;
const int ProtoNPCStatus::kDirectionFieldNumber;
#endif  // !_MSC_VER

ProtoNPCStatus::ProtoNPCStatus()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ProtoNPCStatus::InitAsDefaultInstance() {
}

ProtoNPCStatus::ProtoNPCStatus(const ProtoNPCStatus& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ProtoNPCStatus::SharedCtor() {
  _cached_size_ = 0;
  npcid_ = 0;
  positinx_ = 0;
  positiny_ = 0;
  direction_ = 1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ProtoNPCStatus::~ProtoNPCStatus() {
  SharedDtor();
}

void ProtoNPCStatus::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ProtoNPCStatus::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProtoNPCStatus::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ProtoNPCStatus_descriptor_;
}

const ProtoNPCStatus& ProtoNPCStatus::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_netmsg_2eproto();
  return *default_instance_;
}

ProtoNPCStatus* ProtoNPCStatus::default_instance_ = NULL;

ProtoNPCStatus* ProtoNPCStatus::New() const {
  return new ProtoNPCStatus;
}

void ProtoNPCStatus::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    npcid_ = 0;
    positinx_ = 0;
    positiny_ = 0;
    direction_ = 1;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ProtoNPCStatus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 npcID = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &npcid_)));
          set_has_npcid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_positinX;
        break;
      }

      // required int32 positinX = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_positinX:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &positinx_)));
          set_has_positinx();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_positinY;
        break;
      }

      // required int32 positinY = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_positinY:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &positiny_)));
          set_has_positiny();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_direction;
        break;
      }

      // required .MessageCode.ProtoNPCStatus.NPCDirection direction = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_direction:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MessageCode::ProtoNPCStatus_NPCDirection_IsValid(value)) {
            set_direction(static_cast< ::MessageCode::ProtoNPCStatus_NPCDirection >(value));
          } else {
            mutable_unknown_fields()->AddVarint(4, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ProtoNPCStatus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 npcID = 1;
  if (has_npcid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->npcid(), output);
  }

  // required int32 positinX = 2;
  if (has_positinx()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->positinx(), output);
  }

  // required int32 positinY = 3;
  if (has_positiny()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->positiny(), output);
  }

  // required .MessageCode.ProtoNPCStatus.NPCDirection direction = 4;
  if (has_direction()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->direction(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ProtoNPCStatus::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 npcID = 1;
  if (has_npcid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->npcid(), target);
  }

  // required int32 positinX = 2;
  if (has_positinx()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->positinx(), target);
  }

  // required int32 positinY = 3;
  if (has_positiny()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->positiny(), target);
  }

  // required .MessageCode.ProtoNPCStatus.NPCDirection direction = 4;
  if (has_direction()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->direction(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ProtoNPCStatus::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 npcID = 1;
    if (has_npcid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->npcid());
    }

    // required int32 positinX = 2;
    if (has_positinx()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->positinx());
    }

    // required int32 positinY = 3;
    if (has_positiny()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->positiny());
    }

    // required .MessageCode.ProtoNPCStatus.NPCDirection direction = 4;
    if (has_direction()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->direction());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProtoNPCStatus::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ProtoNPCStatus* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ProtoNPCStatus*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ProtoNPCStatus::MergeFrom(const ProtoNPCStatus& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_npcid()) {
      set_npcid(from.npcid());
    }
    if (from.has_positinx()) {
      set_positinx(from.positinx());
    }
    if (from.has_positiny()) {
      set_positiny(from.positiny());
    }
    if (from.has_direction()) {
      set_direction(from.direction());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ProtoNPCStatus::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoNPCStatus::CopyFrom(const ProtoNPCStatus& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoNPCStatus::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  return true;
}

void ProtoNPCStatus::Swap(ProtoNPCStatus* other) {
  if (other != this) {
    std::swap(npcid_, other->npcid_);
    std::swap(positinx_, other->positinx_);
    std::swap(positiny_, other->positiny_);
    std::swap(direction_, other->direction_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ProtoNPCStatus::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ProtoNPCStatus_descriptor_;
  metadata.reflection = ProtoNPCStatus_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

ProtoPlayerMoveReq::ProtoPlayerMoveReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ProtoPlayerMoveReq::InitAsDefaultInstance() {
}

ProtoPlayerMoveReq::ProtoPlayerMoveReq(const ProtoPlayerMoveReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ProtoPlayerMoveReq::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ProtoPlayerMoveReq::~ProtoPlayerMoveReq() {
  SharedDtor();
}

void ProtoPlayerMoveReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ProtoPlayerMoveReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProtoPlayerMoveReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ProtoPlayerMoveReq_descriptor_;
}

const ProtoPlayerMoveReq& ProtoPlayerMoveReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_netmsg_2eproto();
  return *default_instance_;
}

ProtoPlayerMoveReq* ProtoPlayerMoveReq::default_instance_ = NULL;

ProtoPlayerMoveReq* ProtoPlayerMoveReq::New() const {
  return new ProtoPlayerMoveReq;
}

void ProtoPlayerMoveReq::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ProtoPlayerMoveReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void ProtoPlayerMoveReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ProtoPlayerMoveReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ProtoPlayerMoveReq::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProtoPlayerMoveReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ProtoPlayerMoveReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ProtoPlayerMoveReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ProtoPlayerMoveReq::MergeFrom(const ProtoPlayerMoveReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ProtoPlayerMoveReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoPlayerMoveReq::CopyFrom(const ProtoPlayerMoveReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoPlayerMoveReq::IsInitialized() const {

  return true;
}

void ProtoPlayerMoveReq::Swap(ProtoPlayerMoveReq* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ProtoPlayerMoveReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ProtoPlayerMoveReq_descriptor_;
  metadata.reflection = ProtoPlayerMoveReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

ProtoPlayerMoveRes::ProtoPlayerMoveRes()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ProtoPlayerMoveRes::InitAsDefaultInstance() {
}

ProtoPlayerMoveRes::ProtoPlayerMoveRes(const ProtoPlayerMoveRes& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ProtoPlayerMoveRes::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ProtoPlayerMoveRes::~ProtoPlayerMoveRes() {
  SharedDtor();
}

void ProtoPlayerMoveRes::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ProtoPlayerMoveRes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProtoPlayerMoveRes::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ProtoPlayerMoveRes_descriptor_;
}

const ProtoPlayerMoveRes& ProtoPlayerMoveRes::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_netmsg_2eproto();
  return *default_instance_;
}

ProtoPlayerMoveRes* ProtoPlayerMoveRes::default_instance_ = NULL;

ProtoPlayerMoveRes* ProtoPlayerMoveRes::New() const {
  return new ProtoPlayerMoveRes;
}

void ProtoPlayerMoveRes::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ProtoPlayerMoveRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void ProtoPlayerMoveRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ProtoPlayerMoveRes::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ProtoPlayerMoveRes::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProtoPlayerMoveRes::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ProtoPlayerMoveRes* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ProtoPlayerMoveRes*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ProtoPlayerMoveRes::MergeFrom(const ProtoPlayerMoveRes& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ProtoPlayerMoveRes::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoPlayerMoveRes::CopyFrom(const ProtoPlayerMoveRes& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoPlayerMoveRes::IsInitialized() const {

  return true;
}

void ProtoPlayerMoveRes::Swap(ProtoPlayerMoveRes* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ProtoPlayerMoveRes::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ProtoPlayerMoveRes_descriptor_;
  metadata.reflection = ProtoPlayerMoveRes_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace MessageCode

// @@protoc_insertion_point(global_scope)
